Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 192.168.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 192.168.0.0/18
    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 192.168.64.0/18

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcBlock
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR

Resources:

    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-VPC

    # Internet Gateway
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-IG
            
    VPCGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    # Subnet
    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Metadata:
            Comment: PublicSubnet 1
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone:
                Fn::Select:
                    - '0'
                    - Fn::GetAZs:
                        Ref: AWS::Region
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-PublicSubnet1
                - Key: kubernetes.io/role/elb
                  Value: 1

    PublicSubnet2: 
        Type: AWS::EC2::Subnet
        Metadata:
            Comment: PublicSubnet 2
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone:
                Fn::Select:
                    - '1'
                    - Fn::GetAZs:
                        Ref: AWS::Region
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-PublicSubnet2
                - Key: kubernetes.io/role/elb
                  Value: 1


    # NAT
    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: VPCGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: VPCGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        DependsOn:
            - NatGateway1EIP
            - PublicSubnet1
            - VPCGatewayAttachment
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-NatGateway1

    NatGateway2:
        DependsOn:
            - NatGateway2EIP
            - PublicSubnet2
            - VPCGatewayAttachment
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-NatGateway2


    # RouteTable
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-PublicRouteTable

    PublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: VPCGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: for kuber
            VpcId: !Ref VPC
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-SecurityGroup


Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PUB-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN

    PublicSubnet2: 
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PUB2-SN

    SecurityGroup:
        Description: Security group for kuber
        Value: !Ref SecurityGroup
        Export:
          Name: !Sub ${EnvironmentName}-SecurityGroupIds
