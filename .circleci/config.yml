version: 2.1


jobs:
  test:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - linter

      # make install
      - run:
          name: active env
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install

            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

            hadolint --version
      - save_cache:
          paths:
            - ./venv
          key: linter

      # make lint
      - run:
          name: make lint
          command: |
            . venv/bin/activate
            make lint

  docker-push:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout
      # Creates a remote Docker environment configured to execute Docker commands.
      - setup_remote_docker
      
      - run:
          # installs a docker client that will be used to run the docker commands
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: build image docker
          command: |
            docker build --tag=prj5 .
            docker image ls

      - run:
          name: push to Docker Hub
          command: |
            docker login -u "shalltearbloodfallen01" -p "Long3900@"
            docker tag prj5 shalltearbloodfallen01/prj5:v1
            docker push shalltearbloodfallen01/prj5:v1


  deploy-infrastructure:
    docker:
      # Docker image here that supports AWS CLI
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
      # fix ERROR: tar utility is not present in this image but it is required. Please install it to have workflow workspace capability.
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
            name: stack network
            command: |
              aws --region us-east-1 cloudformation deploy \
                --template-file /cloudformation/network.yml \
                --tags project=${CIRCLE_WORKFLOW_ID:0:7}-prj5 \
                --stack-name "${CIRCLE_WORKFLOW_ID:0:7}-network-prj5" \
                --parameter-overrides /cloudformation/network-parameters.json

      - run:
          name: stack kubernet
          command: |
            aws --region us-east-1 cloudformation deploy \
              --template-file /cloudformation/kuber.yml \
              --tags project=${CIRCLE_WORKFLOW_ID:0:7}-prj5 \
              --stack-name "${CIRCLE_WORKFLOW_ID:0:7}-kuber-prj5" \
              --parameter-overrides /cloudformation/kuber-parameters.json

      - run:
          name: stack server
          command: |
            aws --region us-east-1 cloudformation deploy \
              --template-file /cloudformation/server.yml \
              --tags project=${CIRCLE_WORKFLOW_ID:0:7}-prj5 \
              --stack-name "${CIRCLE_WORKFLOW_ID:0:7}-server-prj5" \
              --parameter-overrides /cloudformation/server-parameters.json

      - run:
          name: Add back-end ip to ansible inventory
          command: |
            aws --region us-east-1 ec2 describe-instances \
              --query "Reservations[*].Instances[*].[PublicIpAddress]" \
              --filters "Name=tag:Name,Values=${CIRCLE_WORKFLOW_ID:0:7}-server-prj5" \
              --output text >> ~/inventory.txt
              cat ~/inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - inventory.txt


workflows:
  default:
    jobs:
      # - test
      # - docker-push:
      #     requires: [test]
      - deploy-infrastructure